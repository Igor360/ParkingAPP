// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Contexts;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ParkingContext))]
    [Migration("20190910101511_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("WebApplication1.Models.Car", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnName("created_at");

                    b.Property<string>("name")
                        .HasColumnName("name");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnName("updated_at");

                    b.HasKey("id");

                    b.ToTable("car");
                });

            modelBuilder.Entity("WebApplication1.Models.Cars", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnName("updated_at");

                    b.HasKey("id");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("WebApplication1.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnName("created_at");

                    b.Property<string>("firstName")
                        .HasColumnName("firstName");

                    b.Property<string>("lastName")
                        .HasColumnName("lastName");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnName("updated_at");

                    b.HasKey("id");

                    b.ToTable("client");
                });

            modelBuilder.Entity("WebApplication1.Models.Parking", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnName("created_at");

                    b.Property<string>("name")
                        .HasColumnName("name");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnName("updated_at");

                    b.HasKey("id");

                    b.ToTable("parking");
                });

            modelBuilder.Entity("WebApplication1.Models.ParkingPosition", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnName("updated_at");

                    b.HasKey("id");

                    b.ToTable("parking_position");
                });

            modelBuilder.Entity("WebApplication1.Models.ParkingTicket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnName("updated_at");

                    b.HasKey("id");

                    b.ToTable("parking_ticket");
                });
#pragma warning restore 612, 618
        }
    }
}
